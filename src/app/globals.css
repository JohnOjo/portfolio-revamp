@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
  --primary-color: #ef6d58;
  --primary-light-color: #ef9358;
  --secondary-color: #28293e;
  --body-text-color: #ffffff;
  --alternate-body-text-color: #212121;
  --background-color: #fdf0e9;
  --tertiary-color: #dda803;
  --box-shadow: rgba(0, 0, 0, 0.52);
  --fire-fly-color: #e9e9eb;
  --header-button-animation: all 0.4s ease-in-out;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  font-family: Arial, Helvetica, sans-serif;
}

.App {
  flex-direction: column;
  background-color: var(--secondary-color);

  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

html,
body,
#root,
.App {
  display: flex;
  flex: 1;
}

div {
  display: flex;
}

/* .circle-container {
  --particleNum: 200;
  --particleColor: var(--fire-fly-color);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(
      var(--fire-fly-color),
      var(--fire-fly-color) 10%,
      hsla(180, 100%, 80%, 0) 56%
    );

    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  --particleBaseSize: 8;

  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      --circleSize: random(var(--particleBaseSize));
      width: $circleSize + px;
      height: $circleSize + px;

      --startPositionY: random(10) + 100;
      --framesName: "move-frames-" + $i;
      --moveDuration: 28000 + random(9000) + ms;

      animation-name: #{var(--framesName)};
      animation-duration: var(--moveDuration);
      animation-delay: random(37000) + ms;

      @keyframes #{var(var(--framesName))} {
        from {
          transform: translate3d(
            #{random(100) + vw},
            #{var(--startPositionY) + vh},
            0
          );
        }

        to {
          transform: translate3d(
            #{random(100) + vw},
            #{- var(--startPositionY) - random(30) + vh},
            0
          );
        }
      }

      .circle {
        animation-delay: random(4000) + ms;
      }
    }
  }
} */
